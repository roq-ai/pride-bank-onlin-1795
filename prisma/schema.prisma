generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model account {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  account_number String        @db.VarChar(20)
  account_type   String        @db.VarChar(50)
  balance        Int
  user_id        String        @db.Uuid
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  user           user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transaction    transaction[]
}

model fintech {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model loan {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  loan_number String   @db.VarChar(20)
  loan_type   String   @db.VarChar(50)
  amount      Int
  user_id     String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model transaction {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_type String   @db.VarChar(50)
  amount           Int
  user_id          String   @db.Uuid
  account_id       String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  account          account  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  account      account[]
  fintech      fintech[]
  loan         loan[]
  transaction  transaction[]
  virtual_card virtual_card[]
}

model virtual_card {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  card_number String   @db.VarChar(20)
  expiry_date DateTime @db.Timestamp(6)
  user_id     String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
